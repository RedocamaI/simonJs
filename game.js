// Simon-game JavaScript code:
// Useful variables:
var userClickedPattern = [];
var gamePattern = [];
var buttonColors = ["red", "blue", "green", "yellow"];
var randomChosenColor;
var level = 0;
var started = false;

// detect a keypress:
$(document).keypress(function () { 
    if(!started){
        $("h1").text("Level: " + level);
        nextSequence();
        started = true;
    }
});

// detect a button click:
$(".btn").click(function(){
    var userChosenColor = $(this).attr("id");
    userClickedPattern.push(userChosenColor);
    playSound(userChosenColor);
    console.log(userClickedPattern);
    animatePress(userChosenColor);
    checkAnswer(userClickedPattern.length-1);
});

// play sound of the button pressed:
function playSound(randomChosenColor){
    var soundPath = "./sounds/" + randomChosenColor + ".mp3";
    var audio = new Audio(soundPath);
    audio.play();
}

// animate the button pressed to have a pressing effect on screen:
function animatePress(currentColor){
    $("#" + currentColor).addClass("pressed");
    setTimeout(function(){
        $("#" + currentColor).removeClass("pressed");
    }, 100);
}

// check if the user generated sequence matches with the
// sequence generated by the game:
function checkAnswer(Currentlevel){
    if(userClickedPattern[Currentlevel] === gamePattern[Currentlevel]){
        if(userClickedPattern.length === gamePattern.length){
            setTimeout(function(){
                nextSequence();
            }, 1000);
        }
    }else{
        $("body").addClass("game-over");
        setTimeout(function(){
            $("body").removeClass("game-over");
        }, 200);

        $("h1").text("Game-Over, press any key to restart.");
        playSound("wrong");
        var displayLevel = $("#level-display");
        level--;
        displayLevel.text("Your score: " + level);
        displayLevel.css("visibility", "visible");

        $(document).keypress(function(){
            startOver(displayLevel);
        });
    }
}

// update the current sequence with the current button pressed:
// NOTE:
// The user is asked to regenerate the sequence from the start
// which was being generated by the game, so we have to
// reinitialize the sequence generated by the user, so
// as to NOT effect the user's sequence by the previous one:
function nextSequence(){
    // reinitialize the userClickedPattern:
    // to regenerate the sequence stored in 
    // gamePattern.
    userClickedPattern = [];
    level++;
    $("h1").text("Level: " + level);
    var randomNumber = Math.floor(Math.random()*4);
    console.log(randomNumber);
    randomChosenColor = buttonColors[randomNumber];
    gamePattern.push(randomChosenColor);
    var currentBtn = $("#" + randomChosenColor);
    currentBtn.fadeIn(100).fadeOut(100).fadeIn(100);
    playSound(randomChosenColor);
}

// if the user presses the wrong button then call start over
// again to restart the game:
function startOver(displayLevel){
    displayLevel.css("visibility", "hidden");
    // reinitialize the variables when game restarts:
    started = false;
    level = 0;
    gamePattern = [];
    userClickedPattern = [];

    nextSequence();
}